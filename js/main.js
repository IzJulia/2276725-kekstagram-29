// /*
// В файле main.js напишите необходимые функции для создания массива из 25 сгенерированных объектов.
// Каждый объект массива — описание фотографии, опубликованной пользователем.

// id  число — идентификатор опубликованной фотографии.
// Это число от 1 до 25. Идентификаторы не должны повторяться.

// url — строка — адрес картинки вида photos/{{i}}.jpg, где {{i}} — это число от 1 до 25. Адреса картинок не должны повторяться.

// description строка — описание фотографии. Описание придумайте самостоятельно.

// likes число — количество лайков, поставленных фотографии.
// Случайное число от 15 до 200

// comments массив объектов — список комментариев, оставленных другими пользователями к этой фотографии.
// Количество комментариев к каждой фотографии — случайное число от 0 до 30.
// Все комментарии генерируются случайным образом.

// ПРИМЕР
// {
//   id: 135,
//   avatar: 'img/avatar-6.svg',
//   message: 'В целом всё неплохо. Но не всё.',
//   name: 'Артём',
// }

// У каждого комментария есть идентификатор — id — любое число.
// Идентификаторы не должны повторяться.

// avatar это строка, значение которой формируется по правилу
// img/avatar-{{случайное число от 1 до 6}}.svg. Аватарки подготовлены в директории img.

// Для формирования текста комментария — message — вам необходимо взять одно или два случайных предложения из представленных ниже:

// Всё отлично!
// В целом всё неплохо. Но не всё.
// Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.
// Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.
// Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.
// Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!

// мена авторов также должны быть случайными. Набор имён для комментаторов составьте сами. Подставляйте случайное имя в поле name
// */

const NAMES = [
  'Иван',
  'Николай',
  'Борис',
  'Алексей',
  'Ольга',
  'Юлия',
  'Марина',
  'Павел',
  'Евгений',
  'Максим',
  'Степан',
  'Наталья',
  'Александр',
  'Сергей',
  'Александра',
  'Мария',
  'Дарья',
  'Денис',
  'Илья',
  'Артем',
  'Константин',
  'Екатерина',
  'Светлана',
  'Георгий',
  'Никита',
];

const DESCRIPTION = [
  'Прекрасная погода',
  'Хороший день',
  'Мой любимый кот',
  'Вкусный ужин',
  'Вместе с друзьями',
  'Идем на прогулку',
  'Хорошего человека много не бывает',
  'Завтра будет лучше, чем сегодня',
  'Всем хорошего дня',
];

const MESSAGE = [
  'В целом всё неплохо. Но не всё.',
  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!',
];

const MAX_OBJECTS = 25;

function getRandomInteger(min,max) {
  return Math.floor(Math.random() * (max - min)) + min;
}

let commentId = 0;

const getComments = (numberOfComments) => {
  const comments = [];
  for (let i = 0; i <= numberOfComments; i++) {
    comments.push({
      id: commentId,
      avatar: `img/avatar-${getRandomInteger(0, 6)}.svg`,
      message: MESSAGE[getRandomInteger(0, MESSAGE.length - 1)],
      name: NAMES[getRandomInteger(0, NAMES.length - 1)]
    });
    commentId++;
  }
  return comments;
};

const createPhotos = () => {
  const photos = [];
  for (let i = 1; i <= MAX_OBJECTS; i++) {
    photos.push({
      id: i,
      url: `photos/${i}.jpg`,
      description: DESCRIPTION[getRandomInteger(0, DESCRIPTION.length - 1)],
      likes: getRandomInteger(15, 200),
      comments: getComments(getRandomInteger(0, 30))
    });
  }
  return photos;
};

console.log(createPhotos());
